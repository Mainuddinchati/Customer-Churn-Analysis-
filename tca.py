# -*- coding: utf-8 -*-
"""TCA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1y09jblfDKQo-SGxcRbAXb_aMb9rVo_r_
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('/content/Customer Churn.csv')

df.head()

"""# **Inspection of the data**"""

df.info()

"""**Replacing blanks with 0 as tenure is 0 and no total charges are recorded**"""

df['TotalCharges'] = df['TotalCharges'].replace(' ','0')
df['TotalCharges'] = df['TotalCharges'].astype('float')

df.info()

df.isnull().sum()

df.describe()

df['customerID'].duplicated().sum()

def conv(value):
  if value == 1:
    return 'yes'
  else:
    return 'no'

df['SeniorCitizen'] = df['SeniorCitizen'].apply(conv)

"""**Convert 0 and 1 values of senior citizen to yes/no to make it easier to understand**"""

df.head(20)

ax = sns.countplot(x='Churn',data=df)
ax.bar_label(ax.containers[0])
plt.title('Count Of Customers By Churn ')
plt.show()

plt.figure(figsize=(3,4))
gb = df.groupby('Churn').agg({'Churn':'count'})
plt.pie(gb['Churn'],labels=gb.index, autopct = "%1.2f%%")
plt.title('Percentage Of Churned Customers',fontsize = 10)
plt.show()

"""The given pie chart we can conclude that 26.54% of our customers have churned out.

Not let's explore the reason behind it
"""

plt.figure(figsize=(5,4))
sns.countplot(x='gender',data=df, hue='Churn')
plt.title('Churn by Gender')
plt.show()

plt.figure(figsize = (3,5))
ax = sns.countplot(x='SeniorCitizen',data=df)
ax.bar_label(ax.containers[0])
plt.title('Count of Customers by Senior Citizen')
plt.show()

plt.figure(figsize=(5,4))
sns.countplot(x='SeniorCitizen',data=df, hue='Churn')
plt.title('Churn by SeniorCitizen')
plt.show()

total_counts = df.groupby('SeniorCitizen')['Churn'].value_counts(normalize=True).unstack()*100
fig, ax = plt.subplots(figsize=(10,6))
total_counts.plot(kind='bar',stacked=True,ax=ax, color=['#1f77b4','#ff7f0e'])

for p in ax.patches:
  width, height = p.get_width(),p.get_height()
  x,y=p.get_xy()
  ax.text(x+width/2, y+height/2,f'{height:.1f}%',ha='center',va='center')

plt.title('Churn by Senior Citizen (Stacked Bar Chart)')
plt.xlabel('SeniorCitizen')
plt.ylabel('Percentage(%)')
plt.xticks(rotation=0)
plt.legend(title='Churn',loc='upper right')
plt.show()

"""**Comparitive a greated percentage of people in senior citizen category have churned**"""

plt.figure(figsize=(9,4))
sns.histplot(x='tenure',data=df,bins=72,hue='Churn')
plt.show()

"""People who have used our services for a long time have stayed and people who have used our services

1 or 2 months have churned
"""

plt.figure(figsize = (5,5))
ax = sns.countplot(x='Contract',data=df,hue='Churn')
ax.bar_label(ax.containers[0])
plt.title('Count of Customers by Contract')
plt.show()

"""People who have month to month contract are like to churn the those who have 1 or 2 year contract"""

df.columns.values

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Sample data setup (replace this with your actual DataFrame)
# Assuming data is in a DataFrame called `df`
# Example:
# df = pd.read_csv('your_file.csv') # Load your data if not already loaded

# Columns you want to plot
columns = [
    'PhoneService', 'MultipleLines', 'InternetService',
    'OnlineSecurity', 'OnlineBackup', 'DeviceProtection',
    'TechSupport', 'StreamingTV', 'StreamingMovies'
]

# Set up the subplot grid
num_cols = 3  # Number of columns for subplots (adjust based on preference)
num_rows = (len(columns) + num_cols - 1) // num_cols  # Calculate the required rows

fig, axes = plt.subplots(num_rows, num_cols, figsize=(15, 10))
fig.suptitle('Count Plots for Service Options', fontsize=16)

# Flatten axes for easy iteration
axes = axes.flatten()

# Plot count plots for each column
for i, col in enumerate(columns):
    sns.countplot(data=df, x=col, ax=axes[i],hue=df['Churn'])
    axes[i].set_title(f'{col} Count')
    axes[i].set_xlabel('')  # Optional: Clear x-axis label for cleaner look

# Remove any empty subplots if number of plots < total grid size
for j in range(i + 1, len(axes)):
    fig.delaxes(axes[j])

plt.tight_layout(rect=[0, 0, 1, 0.96])  # Adjust layout to make room for title
plt.show()

"""This chart visualizes the counts of customers who churned versus those who didnâ€™t across different telecom services. Most customers have "Yes" responses for services like PhoneService, InternetService, and MultipleLines. Churn rates tend to be lower among customers with more optional services like OnlineSecurity, TechSupport, and DeviceProtection, suggesting that these services may be associated with customer retention. However, Fiber optic internet customers show higher churn rates compared to DSL users, potentially indicating service-specific issues."""

plt.figure(figsize = (10,5))
ax = sns.countplot(x='PaymentMethod',data=df,hue='Churn')
ax.bar_label(ax.containers[0])
ax.bar_label(ax.containers[1])
plt.title(' Churned Customers by PaymentMethod')
plt.xticks(rotation=0)
plt.show()

"""Customer is likely to churn when he is using electronic check as a payment method"""

